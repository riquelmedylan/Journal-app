{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNotes","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","setTimeout","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","loading","useSelector","state","ui","useDispatch","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","formValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","console","log","startRegisterEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e077834c.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCmt5EBg6Mg3n9n6gD5L00e7b00-YEBfTc\",\n    authDomain: \"journal-e6db0.firebaseapp.com\",\n    projectId: \"journal-e6db0\",\n    storageBucket: \"journal-e6db0.appspot.com\",\n    messagingSenderId: \"862258194224\",\n    appId: \"1:862258194224:web:8cfcbbc9e7da7181390af5\",\n    measurementId: \"G-CCHHD6XS2N\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}\n\n","export const types = {\r\n    login: \"[Auth] Login\",\r\n    logout: \"[Auth] Logout\",\r\n\r\n    uiSetError: \"[UI] Set Error\",\r\n    uiRemoveError: \"[UI] RemoveError\",\r\n\r\n    uiStartLoading: \"[UI] Start loading\",\r\n    uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n    notesAddNew: \"[Notes] New note\",\r\n    notesActive: \"[Notes] Set active note\",\r\n    notesLoad: \"[Notes] Load notes\",\r\n    notesUpdated: \"[Notes] Update note \",\r\n    notesFileUrl: \"[Notes] Update image url\",\r\n    notesDelete: \"[Notes] Delete note\",\r\n    notesLogoutClean: \"[Notes] Logout clean\",\r\n};\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) =>({\r\n    type:types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () =>({\r\n    type:types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () =>({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () =>({\r\n    type: types.uiFinishLoading\r\n})","export const fileUpload = async (file) => {\r\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/df1tmfaqj/upload\";\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"upload_preset\", \"react-journal\");\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: \"POST\",\r\n            body: formData,\r\n        });\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\nexport const loadNotes = async (uid) =>{\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    return notes\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: \"\",\r\n            body: \"\",\r\n            date: new Date().getTime(),\r\n        };\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    };\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    },\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    },\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    };\r\n};\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes,\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNotes(note.id, noteToFirestore));\r\n        Swal.fire(\"Saved\", note.title, \"success\");\r\n    };\r\n};\r\n\r\nexport const refreshNotes = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note,\r\n        },\r\n    },\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: \"Uploading...\",\r\n            text: \"Please wait...\",\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            },\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n        Swal.close();\r\n    };\r\n};\r\n\r\nexport const startDeleating = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    };\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutClean,\r\n});\r\n","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebaseConfig\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n\r\n                setTimeout(() => {\r\n                    dispatch(finishLoading());\r\n                }, 2000);\r\n            })\r\n            .catch((e) => {\r\n                dispatch(finishLoading);\r\n                Swal.fire(\"Error\", e.message, \"error\");\r\n            });\r\n    };\r\n};\r\n\r\nexport const startRegisterEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(login(user.uid, user.displayName));\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                Swal.fire(\"Error\", e.message, \"error\");\r\n            });\r\n    };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n            });\r\n    };\r\n};\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName,\r\n    },\r\n});\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n});\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\n\nexport const LoginScreen = () => {\n\n    const {loading} = useSelector(state => state.ui)\n\n    const dispatch = useDispatch();\n\n    const [values, handleInputChange] = useForm({\n        email:'hernando@gmail.com',\n        password: '1234567'\n    })\n\n    const { email,password } = values\n\n    const handleLogin = (e) =>{\n        e.preventDefault()\n        dispatch(startLoginEmailPassword( email, password))\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch(startGoogleLogin());\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleLogin}>\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div\n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport validator from 'validator';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const {msgError} = useSelector(state => state.ui)\n\n    const [values, handleInputChange] = useForm({\n        name:'Hernando',\n        email: 'hernando@gmail.com',\n        password: '1234567',\n        password2: '1234567'\n    })\n\n    const {name,email,password,password2} = values\n\n    const handleRegister = (e) =>{\n        e.preventDefault()\n        if(formValid()){\n            dispatch(startRegisterEmailPasswordName(email,password,name))\n        }\n    }\n\n    const formValid = () =>{\n        if(name.trim().length === 0){\n            dispatch(setError('Name is required'))\n            return false\n        }else if(!validator.isEmail(email)){\n            dispatch(setError('Email is required'))\n            return false\n        }else if(password !== password2 || password.length < 5){\n            dispatch(setError('Password should be at least 6 characters'))\n            return false\n        }\n        dispatch( removeError() )\n        return true\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={ handleRegister }>\n\n                {\n                    msgError && (\n                    <div className=\"auth__alert-error\">\n                        {msgError}\n                    </div>\n                    )\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { activeNote } from \"../../actions/notes\";\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch(\n            activeNote(id, {\n                date,\n                title,\n                body,\n                url,\n            })\n        );\n    };\n\n    return (\n        <div className=\"journal__entry pointer\" onClick={handleEntryClick}>\n            {url && (\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: \"cover\",\n                        backgroundImage: `url(${url})`,\n                    }}\n                ></div>\n            )}\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">{title}</p>\n                <p className=\"journal__entry-content\">{body}</p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format(\"dddd\")}</span>\n                <h4>{noteDate.format(\"Do\")}</h4>\n            </div>\n        </div>\n    );\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector(state => state.notes)\n\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id } \n                        {...note}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { startNewNote } from '../../actions/notes'\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n    \n    const {name} = useSelector(state => state.auth)\n\n    const handleLogout = () =>{\n        dispatch(startLogout())\n    }\n    \n    const handleAddNew = () =>{\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span>{name}</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={handleAddNew} \n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                \n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startSaveNote, startUploading } from \"../../actions/notes\";\n\nexport const NotesAppBar = () => {\n    const { active } = useSelector((state) => state.notes);\n\n    const dispatch = useDispatch();\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active));\n    };\n\n    const handlePictureClick = () => {\n        document.querySelector(\"#fileSelector\").click();\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            dispatch(startUploading(file));\n        }\n    };\n\n    const noteDate = moment();\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>{noteDate.format(\"LL\")}</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: \"none\" }}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button onClick={handlePictureClick} className=\"btn\">\n                    Picture\n                </button>\n\n                <button onClick={handleSave} className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { activeNote, startDeleating } from \"../../actions/notes\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { NotesAppBar } from \"./NotesAppBar\";\n\nexport const NoteScreen = () => {\n    const dispatch = useDispatch();\n\n    const { active: note } = useSelector((state) => state.notes);\n\n    const [values, handleInputChange, reset] = useForm(note);\n\n    const activeId = useRef(note.id);\n\n    useEffect(() => {\n        if (note.id !== activeId.current) {\n            reset(note);\n            activeId.current = note.id;\n        }\n    }, [note, reset]);\n\n    useEffect(() => {\n        dispatch(activeNote(values.id, { ...values }));\n    }, [values, dispatch]);\n\n    const handleDelete = () => {\n        dispatch(startDeleating(values.id));\n    };\n\n    const { body, title } = values;\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={handleInputChange}\n                    name=\"title\"\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    onChange={handleInputChange}\n                    name=\"body\"\n                ></textarea>\n\n                {note.url && (\n                    <div className=\"notes__image\">\n                        <img src={note.url} alt=\"imagen\" />\n                    </div>\n                )}\n            </div>\n            <button onClick={handleDelete} className=\"btn btn-danger\">\n                Delete\n            </button>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar />\n\n\n            <main>\n                {\n                    ( active )\n                        ? ( <NoteScreen /> )\n                        : ( <NothingSelected />)\n                }\n\n            </main>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { firebase } from '../firebase/firebaseConfig';\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged( async (user)  =>{\n            if( user?.uid ){\n                dispatch(login( user.uid, user.displayName ));\n                setIsLoggedIn(true)\n\n                dispatch(startLoadingNotes(user.uid))\n            }else{\n                setIsLoggedIn(false)\n            }\n\n            setChecking(false);\n\n        });\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if( checking ){\n        return(\n            <h1>Wait...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n};\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload,\r\n                },\r\n            };\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes],\r\n            };\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload],\r\n            };\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map((note) =>\r\n                    note.id === action.payload.id ? action.payload.note : note\r\n                ),\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter((note) => note.id !== action.payload),\r\n            };\r\n\r\n        case types.notesLogoutClean:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nlet initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer \r\n})\r\n\r\nexport const store = createStore(\r\n    reducers, \r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n        case types.logout:\r\n            return { }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}